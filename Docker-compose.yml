name: docker-react-python
services:
  postgresdb: 
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
  
  fastapi:
    restart: always
    build:
      context: ./fastapi/
      dockerfile: Dockerfile
    environment:
      - APP_PORT=8000
      - PG_DBNAME=postgres
      - PG_HOST=postgresdb
      - PG_USER=postgres
      - PG_PASSWORD=password
    depends_on:
      postgresdb:
        condition: service_healthy
    ports:
      - 8000:8000

  web:
    build:
      context: ./web-app/
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
     - ./web-app:/app
     - ./web-app/node_modules:/app/node_modules
    environment:
      NODE_ENV: development
    env_file:
      - ./web-app/.env
    stdin_open: true
    tty: true
    command: npm start

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  db-data: {}